language: minimal

env:

matrix:
  include:
  - os: linux
    dist: xenial
    addons:
      apt:
        packages:
          - qemu-user-static
          - binfmt-support
    env: QEMU_ARM=1
  - os: linux
    dist: trusty
    addons:
      apt:
        packages:
        - cmake
        - ninja-build
        - clang-3.6
        - libc++-dev
        - zlib1g-dev
        - libbz2-dev
        - vim-common
        - shellcheck
    env: CC=clang-3.6 CXX=clang++-3.6
  - os: linux
    dist: trusty
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        - llvm-toolchain-trusty-7
        packages:
        - cmake
        - ninja-build
        - clang-7
        - libc++-7-dev
        - libc++abi-7-dev
        - zlib1g-dev
        - libbz2-dev
        - vim-common
        - shellcheck
    env: CC=clang-7 CXX=clang++-7
  - os: linux
    dist: trusty
    addons:
      apt:
        packages:
        - cmake
        - ninja-build
        - gcc-4.8
        - g++-4.8
        - zlib1g-dev
        - libbz2-dev
        - vim-common
        - shellcheck
    env: CC=gcc-4.8 CXX=g++-4.8
  - os: linux
    dist: trusty
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - cmake
        - ninja-build
        - gcc-8
        - g++-8
        - zlib1g-dev
        - libbz2-dev
        - vim-common
        - shellcheck
    env: CC=gcc-8 CXX=g++-8
  - os: linux
    dist: trusty
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - cmake
        - ninja-build
        - gcc-8
        - g++-8
        - zlib1g-dev
        - libbz2-dev
        - vim-common
        - libopenmpi-dev
        - shellcheck
    env: MPI=1 CC=gcc-8 CXX=g++-8
  - os: osx
    osx_image: xcode10.1
    addons:
      homebrew:
        packages:
        - cmake
        - ninja
        - gcc@8
        - zlib
        - bzip2
        - shellcheck
    env: CC=gcc-8 CXX=g++-8
  allow_failures:
  - env: QEMU_ARM=1
  fast_finish: true

services:
  - docker

before_install:
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew link gcc@8 --force; fi
  - export CC
  - export CXX

script:
  - |
    if [[ -n "$QEMU_ARM" ]]; then \
      docker build --build-arg NAMESPACE=arm64v8/ -t mmseqs . || exit 1; \
    elif [[ "$TRAVIS_OS_NAME" == "linux" ]]; then \
      if [[ -n "$MPI" ]]; then MPI=1; else MPI=0; fi; \
      mkdir build; cd build; \
      cmake -G Ninja -DENABLE_WERROR=1 -DHAVE_MPI="$MPI" -DHAVE_SSE4_1=1 -DHAVE_TESTS=1 -DREQUIRE_OPENMP=0 .. \
        || exit 1; ninja || exit 1; \
    elif [[ "$TRAVIS_OS_NAME" == "osx" ]]; then \
      ./util/build_osx.sh . build || exit 1; \
    else \
      exit 1; \
    fi

